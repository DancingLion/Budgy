// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  income    Float?   @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts           Account[]
  transactions      Transaction[]
  plaidItems        PlaidItem[]
  incomeSources     IncomeSource[]
  incomeTransactions IncomeTransaction[]
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  plaidItemId       String
  plaidAccountId    String   @unique
  name              String
  type              String
  subtype           String?
  balance           Float
  availableBalance  Float?
  persistent_account_id String?
  lastUpdated       DateTime
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id])
  plaidItem    PlaidItem     @relation(fields: [plaidItemId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id                String   @id @default(uuid())
  userId            String
  accountId         String
  plaidTransactionId String  @unique
  amount            Float
  description       String
  merchantName      String?
  category          String
  date              DateTime
  pending           Boolean
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  account Account @relation(fields: [accountId], references: [id])
}

model PlaidItem {
  id            String   @id @default(uuid())
  userId        String
  plaidItemId   String   @unique
  accessToken   String
  status        String   @default("ACTIVE")
  error         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user     User      @relation(fields: [userId], references: [id])
  accounts Account[]
}

enum IncomeFrequency {
  WEEKLY
  BIWEEKLY
  MONTHLY
  ANNUAL
  ONE_TIME
}

model IncomeSource {
  id             String            @id @default(cuid())
  name           String
  amount         Float
  frequency      IncomeFrequency
  nextPaymentDate DateTime
  isActive       Boolean           @default(true)
  createdAt      DateTime          @default(now())
  updatedAt      DateTime          @updatedAt
  user           User              @relation(fields: [userId], references: [id])
  userId         String
  transactions   IncomeTransaction[]
}

model IncomeTransaction {
  id             String      @id @default(cuid())
  amount         Float
  date           DateTime
  description    String?
  isAutoGenerated Boolean    @default(false)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  user           User        @relation(fields: [userId], references: [id])
  userId         String
  incomeSource   IncomeSource @relation(fields: [incomeSourceId], references: [id])
  incomeSourceId String
}
